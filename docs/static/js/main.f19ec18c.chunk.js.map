{"version":3,"sources":["Components/AddCategory.js","helpers/GetGifs.js","Components/GifGridItem.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","onChange","target","value","handleInputChange","type","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","imagen","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","categoria","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAC7BR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OACzCN,EAAc,OAKT,2BAAOO,SAAU,SAACL,GAAD,OAZA,SAACA,GACnBF,EAAcE,EAAEM,OAAOC,OAWEC,CAAkBR,IAAIS,KAAK,OAAOF,MAAOV,M,uBCdjEa,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAE0BC,UAAUH,GAFpC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAY,IAAD,EAChC,MAAO,CACLC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MACdV,IAAG,UAAEQ,EAAOG,cAAT,aAAE,EAAeC,iBAAiBZ,QATtB,kBAYZM,GAZY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAErB,yBAAKgB,UAAU,0CACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCHGS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCsB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAZAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GAElBX,QAAQC,IAAIU,GACdH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAId,CAACtB,IAEGuB,EDduBK,CAAa5B,GAA/Ba,EAF2B,EAEhCN,KAAYe,EAFoB,EAEpBA,QAOnB,OACE,oCACA,wBAAIJ,UAAU,qCAAqClB,GAClDsB,GAAW,uBAAGJ,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aACZL,EAAOJ,KAAI,SAACoB,GAAD,OACV,kBAAC,EAAD,eAAaC,IAAKD,EAAIlB,IAAQkB,UEMvBE,EArBM,WAAK,IAAD,EAEe9C,mBAAS,CAAC,aAFzB,mBAEdQ,EAFc,KAEFT,EAFE,KAIrB,OACI,oCACA,8CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAG5B,4BAEQS,EAAWgB,KAAI,SAACuB,GAAD,OACf,kBAAC,EAAD,CAASF,IAAKE,EAAWhC,SAAUgC,UCZnDC,IAASC,OACL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f19ec18c.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e)=>{\r\n            setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2) {\r\n        setCategorias(categorias=>[inputValue,...categorias]);\r\n        setInputValue('');\r\n    }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n             <input onChange={(e) => handleInputChange(e)} type=\"text\" value={inputValue}></input>\r\n        </form> \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias:PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=uAGAsR5SfbHKu2g4cMqHOQN7V7inU76d&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((imagen) => {\r\n      return {\r\n        id: imagen.id,\r\n        title: imagen.title,\r\n        url: imagen.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  };","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  console.log(id, title, url);\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"./hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./Components/GifGridItem\";\r\n//import {getGifs} from './helpers/GetGifs';\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data:images,loading} = useFetchGifs(category);\r\n\r\n  // const [images, setImages] = useState([]);\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n    <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n    {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n    <div className=\"card-grid\">\r\n      {images.map((img) => (\r\n        <GifGridItem key={img.id} {...img}></GifGridItem>\r\n      ))}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      \r\n          console.log(imgs);\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categorias, setCategorias] = useState(['Robotech'])\r\n\r\n    return (\r\n        <>\r\n        <h1>Gif Expert App</h1>\r\n        <hr/>\r\n        <AddCategory setCategorias={setCategorias}>\r\n\r\n        </AddCategory>\r\n        <ol>\r\n            {\r\n                categorias.map((categoria) =>\r\n                <GifGrid key={categoria} category={categoria}></GifGrid>\r\n                )\r\n            }\r\n        </ol>\r\n        </>\r\n    );\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}